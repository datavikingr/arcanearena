./scripts/player_behavior.gd:539:		current_state = get_state_directionality(State.PLATFORM) # NOTE CAST animation & player_platform() TODO
./scripts/player_behavior.gd:545:	# Y Button - Special TODO: Needs implementation - not here, down at player_special()
./scripts/player_behavior.gd:746:func player_block() -> void: # Called by state_machine(); Localized magic wall for defense #NOTE/FEEDBACK/TODO: It's been suggested to make the block bigger.
./scripts/player_behavior.gd:785:func player_special() -> void: # TODO Called by state_machine(); The Player is spending their 'smash ball' scroll
./scripts/player_behavior.gd:804:func player_score(player_name) -> void: # TODO?? Maybe a celebration animation?
./scripts/player_behavior.gd:867:		#TODO: Okay, the following line, -here-, creates wall-stick. it's grippier than meatboy.
./scripts/player_behavior.gd:869:		#TODO: I'm going to implement this as a match option, in the future.
./scripts/player_missile.gd:61:				#TODO: probably emit signal to body: player_hurt, and then have to build the player hurt animation, knockback (.75 seconds), tie it into UI, death animation, respawn timer.
./scripts/cold_goal.gd:22:			players = [player1, player2] #TODO: Replace with dynamic detection of players
./scripts/player_attack.gd:44:	elif body.is_in_group("players"): # Then we need to be able to do damage TODO
./scripts/player_attack.gd:48:				#TODO: probably emit signal to body: player_hurt, and then have to build the player hurt animation, knockback (.75 seconds), tie it into UI, death animation, respawn timer.
./scripts/ball.gd:52:				#TODO We need the ball to stop interacting with physics, disappear, and reset position.
./scripts/ball.gd:54:				#TODO: We gotta figure out this possession and on fire idea
./scripts/ball.gd:109:func write_gitgud_message() -> void: #TODO
./scripts/hot_goal.gd:22:			players = [player1, player2] #TODO: Replace with dynamic detection of players
